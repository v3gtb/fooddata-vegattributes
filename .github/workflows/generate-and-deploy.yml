name: Generate and deploy

on: [push]

env:
  SURVEY_FOODDATA_ZIP_URL: 'https://fdc.nal.usda.gov/fdc-datasets/FoodData_Central_survey_food_json_2021-10-28.zip'
  SURVEY_FOODDATA_ZIP_FILENAME: 'FoodData_Central_survey_food_json_2021-10-28.zip'
  SURVEY_FOODDATA_JSON_FILENAME: 'FoodData_Central_survey_food_json_2021-10-28.json'
  SR_LEGACY_FOODDATA_ZIP_URL: 'https://fdc.nal.usda.gov/fdc-datasets/FoodData_Central_sr_legacy_food_json_2021-10-28.zip'
  SR_LEGACY_FOODDATA_ZIP_FILENAME: 'FoodData_Central_sr_legacy_food_json_2021-10-28.zip'
  SR_LEGACY_FOODDATA_JSON_FILENAME: 'FoodData_Central_sr_legacy_food_json_2021-10-28.json'
  FOODDATA_DIR: fooddata
  GENERATED_JSON_FILENAME: 'VegAttributes_for_FoodData_Central_survey_and_sr_legacy_food_json_2021-10-28.json'

jobs:
  generate-and-test-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Install project's Python package
        run: pip install -e .
      - name: Load USDA FDC FoodData from cache
        id: download
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.FOODDATA_DIR }}
            indexed_FoodData_Central_survey_and_sr_legacy_food_json_2021-10-28.jsons.tar.xz
          key: v1-${{ env.SURVEY_FOODDATA_ZIP_URL }}-${{ env.SR_LEGACY_FOODDATA_ZIP_URL }}
      - name: Download USDA FDC FoodData
        if: steps.download.outputs.cache-hit != 'true'
        run: >
          (
            mkdir -p "$FOODDATA_DIR" &&
            cd "$FOODDATA_DIR" &&
            if [ ! -f "$SURVEY_FOODDATA_ZIP_FILENAME" ]; then
              curl "$SURVEY_FOODDATA_ZIP_URL" -o "$SURVEY_FOODDATA_ZIP_FILENAME" &&
              unzip "$SURVEY_FOODDATA_ZIP_FILENAME";
            fi
            if [ ! -f "$SR_LEGACY_FOODDATA_ZIP_FILENAME" ]; then
              curl "$SR_LEGACY_FOODDATA_ZIP_URL" -o "$SR_LEGACY_FOODDATA_ZIP_FILENAME" &&
              unzip "$SR_LEGACY_FOODDATA_ZIP_FILENAME";
            fi
          )
      - name: Set up symlinks for input files
        run: |
          ln -s "$FOODDATA_DIR/$SURVEY_FOODDATA_JSON_FILENAME"
          ln -s "$FOODDATA_DIR/$SR_LEGACY_FOODDATA_JSON_FILENAME"
      - name: Generate VegAttributes JSON
        run: fooddata-vegattributes generate
      - name: Write file name of generated JSON to env (TODO fix: use cmd output)
        run: >
          echo
          "GENERATED_JSON_FILENAME=$GENERATED_JSON_FILENAME"
          >> $GITHUB_ENV
      - name: Upload generated JSON(s) as GitHub artifact
        uses: actions/upload-artifact@v3
        with:
          name: generated-json
          path: |
            ${{ env.GENERATED_JSON_FILENAME }}
            debug_${{ env.GENERATED_JSON_FILENAME }}
      - name: Install test dependencies
        run: pip install -e .[test]
      - name: Install codecov uploader
        run: >
          curl -Os https://uploader.codecov.io/latest/linux/codecov;
          chmod +x codecov
      - name: Run tests
        run: pytest --cov=./fooddata_vegattributes --cov-report=xml
      - name: Upload coverage report
        run: ./codecov
      - name: Typecheck
        run: mypy -p fooddata_vegattributes
      - name: Publish generated JSON as GitHub release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ env.GENERATED_JSON_FILENAME }}
  deploy-pages:
    needs: generate-and-test-and-publish
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Install project's Python package
        run: pip install -e .
      - name: Download generated JSON(s) artifact from generate step
        uses: actions/download-artifact@v3
        with:
          name: generated-json
      - name: Generate GitHub Pages contents
        run: python .gh-pages/generate-pages.py
      - name: Copy GitHub Pages contents to temporary directory
        run: |
          PAGES_TMPDIR="$(mktemp -d)"
          cp -r .gh-pages/content/* "$PAGES_TMPDIR"/
          echo "PAGES_TMPDIR=$PAGES_TMPDIR" >> "$GITHUB_ENV"
      - name: Check out GitHub Pages branch (gh-pages)
        uses: actions/checkout@v3
        with:
          ref: gh-pages
          clean: true
      - name: Clear working tree and copy Pages contents over it
        run: |
          shopt -s dotglob
          shopt -s extglob
          git clean -xfd
          git rm -rf !(..|.|.git|.gitignore)
          cp -r "$PAGES_TMPDIR"/* ./
      - name: Commit and push changes for GitHub Pages
        run: |
          git config user.name 'github-actions-wf'
          shopt -s globstar
          git add -A .
          if git diff --cached --exit-code; then
            echo "no updates to GH pages contents"
          else
            git commit -m 'Update GH pages contents'
            git push
          fi
